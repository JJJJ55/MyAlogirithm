package Tier_3;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.StringTokenizer;

public class Ex2638 {
	static int n,m,arr[][];
	static int cnt;
	static int di[] = {-1,1,0,0};
	static int dj[] = {0,0,-1,1};
	static boolean melt[][];
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		st = new StringTokenizer(br.readLine());
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		
		arr = new int[n][m];
		for(int i=0;i<n;i++) {
			st = new StringTokenizer(br.readLine());
			for(int j=0;j<m;j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
				if(arr[i][j]==1) cnt++;
			}
		}
		int time = 0;
		while(true) {
			melt = new boolean[n][m];
			air(); // 외부공기 정하기
			for(int i=0;i<n;i++) {//치즈 녹이기
				for(int j=0;j<m;j++) {
					if(arr[i][j]==1) {
						melt(i,j);
					}
				}
			}
			if(cnt==0) {
				break;
			}
			time++;
			System.out.println(time);
		}
		
		System.out.println(time);
		
	}
	
	static void air() {
		Queue<int[]> q = new ArrayDeque<int[]>();
		boolean visit[][] = new boolean[n][m];
		q.add(new int[] {0,0});
		arr[0][0] = 9;
		visit[0][0] = true;
		
		while(!q.isEmpty()) {
			int info[] = q.poll();
			for(int d=0;d<4;d++) {
				int ni = info[0]+di[d];
				int nj = info[1]+dj[d];
				if(ni>=0 && ni<n && nj>=0 && nj<m && !visit[ni][nj]) {
					visit[ni][nj] = true;
					if(arr[ni][nj]==0) {
						arr[ni][nj]=9;
						q.add(new int[] {ni,nj});
					} else if(arr[ni][nj] == 9) {
						q.add(new int[] {ni,nj});
					}
				}
			}
		}
	}
	
	static void melt(int i, int j) {
		int count=0;
		for(int d=0;d<4;d++) {
			int ni = i+di[d];
			int nj = j+dj[d];
			if(ni>=0 && ni<n && nj>=0 && nj<m && arr[ni][nj]==9 && !melt[ni][nj]) {
				cnt++;
			}
		}
		if(count>=2) {
			arr[i][j]=9;
			melt[i][j] = true;
			cnt--;
		}
	}
}

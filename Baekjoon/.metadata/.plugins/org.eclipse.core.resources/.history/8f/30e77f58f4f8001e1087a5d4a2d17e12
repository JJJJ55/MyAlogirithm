package Tier_1;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.StringTokenizer;

public class Ex13335 {
	static int n,w,l;
	static Queue<truc> q = new ArrayDeque<truc>();
	static Queue<truc> bridge = new ArrayDeque<truc>();
	
	static class truc{
		int weight;
		int time;
		
		public truc(int weight, int time) {
			this.weight = weight;
			this.time = time;
		}
	}
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		st = new StringTokenizer(br.readLine());
		
		n = Integer.parseInt(st.nextToken());
		w = Integer.parseInt(st.nextToken());
		l = Integer.parseInt(st.nextToken());
		
		st = new StringTokenizer(br.readLine());
		for(int i=0;i<n;i++) {
			q.add(new truc(Integer.parseInt(st.nextToken()),w));
		}
		
		int time = 0;
		int weight = 0;
		while(!q.isEmpty() && weight==0) {
			if(l>=weight+q.peek().weight) {
				weight+=q.peek().weight;
				bridge.add(q.poll());
			}
			int size = bridge.size();
			for(int s=0;s<size;s++) {
				truc t = bridge.poll();
				if(t.time!=0) {
					bridge.add(new truc(t.weight,t.time-1));
				} else {
					weight-=t.weight;
				}
			}
			time++;
		}
		System.out.println(time);
		
	}
}

package Tier_5;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class Ex1916 {
	static int n,m;
	static List<bus> list[];
	static int dist[];
	
	static class bus implements Comparable<bus>{
		int to;
		int cost;
		public bus(int to, int cost) {
			super();
			this.to = to;
			this.cost = cost;
		}
		@Override
		public int compareTo(bus o) {
			return this.cost - o.cost;
		}
		
	}
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		n = Integer.parseInt(br.readLine());
		m = Integer.parseInt(br.readLine());
		
		list = new List[n+1];
		dist = new int[n+1];
		
		for(int i=1;i<=n;i++) {
			dist[i] = Integer.MAX_VALUE;
		}
		for(int i=1;i<=n;i++) {
			list[i] = new ArrayList<bus>();
		}
		
		for(int i=0;i<m;i++) {
			st = new StringTokenizer(br.readLine());
			int from = Integer.parseInt(st.nextToken());
			int to = Integer.parseInt(st.nextToken());
			int cost = Integer.parseInt(st.nextToken());
			list[from].add(new bus(to, cost));
		}
		st = new StringTokenizer(br.readLine());
		int start = Integer.parseInt(st.nextToken());
		int end = Integer.parseInt(st.nextToken());
		
		int ans = dik(start, end);
		System.out.println(ans);
	}
	
	static int dik(int i, int j) {
		PriorityQueue<bus> q = new PriorityQueue<bus>();
		boo
	}
}

package Tier_3;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.StringTokenizer;

public class Ex2638 {
	static int n,m,arr[][];
	static int cnt;
	static int di[] = {-1,1,0,0};
	static int dj[] = {0,0,-1,1};
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		st = new StringTokenizer(br.readLine());
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		
		arr = new int[n][m];
		for(int i=0;i<n;i++) {
			st = new StringTokenizer(br.readLine());
			for(int j=0;j<m;j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
				if(arr[i][j]==1) cnt++;
			}
		}
		int time = 0;
		while(cnt!=0) {
			air() // 외부공기 정하기
			bfs() // 치즈 녹이기
			time++;
		}
		
		System.out.println(time);
		
	}
	
	static void air() {
		Queue<int[]> q = new ArrayDeque<int[]>();
		boolean visit[][] = new boolean[n][m];
		q.add(new int[] {0,0});
		visit[0][0] = true;
		arr[0][0] = 9;
		
		while(!q.isEmpty()) {
			int info[] = q.poll();
			for(int d=0;d<4;d++) {
				int ni = info[0]+di[d];
				int nj = info[1]+dj[d];
				if(ni>=0 && ni<n && nj>=0 && nj<m && arr[ni][nj]==0 && !visit[ni][nj]) {
					arr[ni][nj]=9;
					visit[ni][nj] = true;
				}
			}
		}
	}
}

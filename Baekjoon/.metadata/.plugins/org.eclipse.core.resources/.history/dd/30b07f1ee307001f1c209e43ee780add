package Tier_3;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Ex1520 {
	static int arr[][],n,m,cnt;
	static int di[] = {-1,1,0,0};
	static int dj[] = {0,0,-1,1};
	static boolean visit[][];
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		st = new StringTokenizer(br.readLine());
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		
		arr = new int[n][m];
		visit = new boolean[n][m];
		for(int i=0;i<n;i++) {
			st = new StringTokenizer(br.readLine());
			for(int j=0;j<m;j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		dfs(0,0,arr[0][0]);
		
		System.out.println(cnt);
	}
	
	static void dfs(int x,int y, int t) {
		if(x==n-1 && y==m-1) {
			cnt++;
			return;
		}
		for(int d=0;d<4;d++) {
			int ni = x+di[d];
			int nj = y+dj[d];
			if(ni>=0 && ni<n && nj>=0 && nj<m && arr[ni][nj]<t) {
				dfs(ni,nj,arr[ni][nj]);
			}
		}
	}
}

package Tier_4;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

public class Ex20056 {
	static int n,m,k;
	static int di[] = {-1,-1,0,1,1,1,0,-1};
	static int dj[] = {0,1,1,1,0,-1,-1,-1};
	static List<fire> list = new ArrayList<fire>();
	static List<Integer> arr[][];
	static class fire{
		int idx;
		int i;
		int j;
		int m;
		int d;
		int s;
		public fire(int idx, int i, int j, int m, int d, int s) {
			super();
			this.idx = idx;
			this.i = i;
			this.j = j;
			this.m = m;
			this.d = d;
			this.s = s;
		}
		
	}
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		st = new StringTokenizer(br.readLine());
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		k = Integer.parseInt(st.nextToken());
		
		arr = new List[n+1][n+1];
		for(int i=1;i<=n;i++) {
			for(int j=1;j<=n;j++) {
				arr[i][j] = new ArrayList<Integer>();
			}
		}
		for(int i=1;i<=m;i++) {
			st = new StringTokenizer(br.readLine());
			int x = Integer.parseInt(st.nextToken());
			int y = Integer.parseInt(st.nextToken());
			int m = Integer.parseInt(st.nextToken());
			int d = Integer.parseInt(st.nextToken());
			int s = Integer.parseInt(st.nextToken());
			
			list.add(new fire(i,x,y,m,d,s));
		}
		while(k-->0) {
			for(int i=0;i<list.size();i++) {
				fire f = list.get(i);
				int ni = f.i +(di[f.d]*f.s)%n;
				int nj = f.j +(dj[f.d]*f.s)%n;
				
				if(ni<1) {
					ni = n-Math.abs(ni);
				} else if(ni>n){
					ni = ni-n;
				}
				if(nj<1) {
					nj = n-Math.abs(nj);
				} else if(nj>n){
					nj = nj-n;
				}
				f.i = ni;
				f.j = nj;
				arr[ni][nj].add(f.);
			}
		}
	}
}

package Tier_4;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

public class Ex2458 {
	static int n,m;
	static List<Integer> list[];
	static int num[];
	static boolean visit[];
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		st = new StringTokenizer(br.readLine());
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		
		list = new List[n+1];
		num = new int[n+1];
		
		for(int i=1;i<=n;i++) {
			list[i] = new ArrayList<Integer>();
		}
		
		for(int i=0;i<m;i++) {
			st = new StringTokenizer(br.readLine());
			int from = Integer.parseInt(st.nextToken());
			int to = Integer.parseInt(st.nextToken());
			list[from].add(to);
		}
		
		for(int i=1;i<=n;i++) {
			visit = new boolean[n+1];
			int dfs(i,0);
		}
		
		
	}
	
	static int dfs(int x, int cnt) {
		int max = 0;
		for(int i : list[x]) {
			if(!visit[i]) {
				visit[i] = true;
				dfs(i,cnt+1);
			}
		}
		return cnt;
	}
}
